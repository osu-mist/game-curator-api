swagger: '2.0'
info:
  title: 'Game Curator API'
  description: 'Learning project API to retrieve and manipulate game review data.'
  version: 'v1'
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
schemes:
  - http
host: 'api.oregonstate.edu'
basePath: /v1
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/game-curator-api
produces:
  - application/json
paths:
  /game/{gameId}:
    get:
      summary: 'Find game by ID'
      description: 'Returns a single game'
      parameters:
      - name: 'gameId'
        in: 'path'
        description: 'Id of game to return'
        required: true
        type: 'integer'
        format: 'int64'
      responses:
        200:
          description: 'Successful response'
    post:
      summary: 'Add a new game'
      responses:
        201:
          description: Successfully added a game
        405:
          description: Invalid input
definitions:
  Game:
    properties:
      id:
        type: integer
        format: int64
      developer:
        $ref: '#/definitions/Developer'
      name:
        type: string
        description: 'Name of the game.'
        example: 'Eternal Death Slayer 3'
      score:
        type: number
        format: float
        description: 'Composite review score of this game out of 5.'
        example: 4.5
      links:
        $ref: '#/definitions/SelfLink'
  Developer:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: 'Name of the developer'
        example: 'Terminal Reality'
  Review:
    properties:
      id:
        type: integer
        format: int64
      game:
        $ref: '#/definitions/Game'
      reviewer:
        type: string
        description: 'Person who wrote the review.'
      score:
        type: number
        format: float
        description: 'Score for this review out of 5.'
      reviewText:
        type: string
        description: 'Text containing the review for the referenced game.'
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self-link of current resource
